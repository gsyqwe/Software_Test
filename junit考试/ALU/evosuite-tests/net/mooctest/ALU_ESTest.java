/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 29 14:04:30 CST 2019
 */

package net.mooctest;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.mooctest.ALU;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class ALU_ESTest extends ALU_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ALU aLU0 = new ALU();
      aLU0.normalize("-");
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ALU aLU0 = new ALU();
      // Undeclared exception!
      try { 
        aLU0.adder("zWfv0", "", 'C', 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ALU aLU0 = new ALU();
      aLU0.floatRepresentation("101", ':', ':');
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ALU aLU0 = new ALU();
      // Undeclared exception!
      try { 
        aLU0.integerSubtraction("", "!", 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ALU aLU0 = new ALU();
      aLU0.floatTrueValue("1", 0, (-1));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ALU aLU0 = new ALU();
      aLU0.integerTrueValue("hz");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ALU aLU0 = new ALU();
      aLU0.ieee754("", 65);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ALU aLU0 = new ALU();
      aLU0.ieee754("", 33);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ALU aLU0 = new ALU();
      aLU0.floatRepresentation("0", 0, 1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ALU aLU0 = new ALU();
      aLU0.floatRepresentation("-6", 0, ':');
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ALU aLU0 = new ALU();
      // Undeclared exception!
      try { 
        aLU0.floatRepresentation("'", 0, 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"'\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ALU aLU0 = new ALU();
      // Undeclared exception!
      try { 
        aLU0.integerRepresentation(")", 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \")\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ALU aLU0 = new ALU();
      aLU0.normalize("");
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ALU aLU0 = new ALU();
      aLU0.negation("");
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ALU aLU0 = new ALU();
      aLU0.leftShift("", 0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ALU aLU0 = new ALU();
      aLU0.floatRepresentation("10", (-1), 0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ALU aLU0 = new ALU();
      String string0 = aLU0.integerSubtraction("I", "I", 1000);
      // Undeclared exception!
      aLU0.oneAdder(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ALU aLU0 = new ALU();
      // Undeclared exception!
      try { 
        aLU0.oneAdder((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.ALU", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ALU aLU0 = new ALU();
      // Undeclared exception!
      try { 
        aLU0.normalize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.ALU", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ALU aLU0 = new ALU();
      // Undeclared exception!
      try { 
        aLU0.negation((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.ALU", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ALU aLU0 = new ALU();
      // Undeclared exception!
      try { 
        aLU0.leftShift("", 1);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ALU aLU0 = new ALU();
      // Undeclared exception!
      try { 
        aLU0.leftShift((String) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.ALU", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ALU aLU0 = new ALU();
      // Undeclared exception!
      try { 
        aLU0.integerTrueValue((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.ALU", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ALU aLU0 = new ALU();
      // Undeclared exception!
      aLU0.integerSubtraction("2", "2", 1112);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ALU aLU0 = new ALU();
      // Undeclared exception!
      try { 
        aLU0.integerSubtraction("", (String) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.ALU", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ALU aLU0 = new ALU();
      // Undeclared exception!
      try { 
        aLU0.integerRepresentation("", 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ALU aLU0 = new ALU();
      // Undeclared exception!
      try { 
        aLU0.integerRepresentation((String) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.ALU", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ALU aLU0 = new ALU();
      // Undeclared exception!
      try { 
        aLU0.floatTrueValue((String) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.ALU", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ALU aLU0 = new ALU();
      // Undeclared exception!
      try { 
        aLU0.floatRepresentation("", 0, 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ALU aLU0 = new ALU();
      // Undeclared exception!
      try { 
        aLU0.floatRepresentation((String) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.ALU", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ALU aLU0 = new ALU();
      // Undeclared exception!
      try { 
        aLU0.claAdder((String) null, "", '[');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ALU aLU0 = new ALU();
      // Undeclared exception!
      aLU0.adder("1", "1", '@', 1112);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ALU aLU0 = new ALU();
      // Undeclared exception!
      try { 
        aLU0.adder("", (String) null, 'H', 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ALU aLU0 = new ALU();
      char char0 = aLU0.xorGate('G', 'G');
      assertEquals('0', char0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ALU aLU0 = new ALU();
      char char0 = aLU0.xorGate('o', 'z');
      assertEquals('1', char0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ALU aLU0 = new ALU();
      char char0 = aLU0.andGate('t', 't');
      assertEquals('0', char0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ALU aLU0 = new ALU();
      char char0 = aLU0.andGate('1', '1');
      assertEquals('1', char0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ALU aLU0 = new ALU();
      String string0 = aLU0.claAdder("tioe", "tioe", 'N');
      assertEquals("00001", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ALU aLU0 = new ALU();
      // Undeclared exception!
      try { 
        aLU0.claAdder("", "", '~');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ALU aLU0 = new ALU();
      String string0 = aLU0.adder("0", "I", '>', 5);
      assertEquals("000001", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ALU aLU0 = new ALU();
      String string0 = aLU0.adder("6", "1", ':', 9);
      assertEquals("0111111111", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ALU aLU0 = new ALU();
      String string0 = aLU0.oneAdder("0");
      assertEquals("01", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ALU aLU0 = new ALU();
      String string0 = aLU0.negation("0");
      assertEquals("1", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ALU aLU0 = new ALU();
      String string0 = aLU0.negation("8");
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ALU aLU0 = new ALU();
      String string0 = aLU0.integerRepresentation("0", 1);
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ALU aLU0 = new ALU();
      String string0 = aLU0.integerRepresentation("1", 0);
      assertEquals("1", string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ALU aLU0 = new ALU();
      String string0 = aLU0.integerRepresentation("0", 0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ALU aLU0 = new ALU();
      // Undeclared exception!
      try { 
        aLU0.integerRepresentation("-", 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ALU aLU0 = new ALU();
      String string0 = aLU0.fullAdder('#', '#', '#');
      assertEquals("01", string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ALU aLU0 = new ALU();
      int int0 = aLU0.normalize("3");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ALU aLU0 = new ALU();
      int int0 = aLU0.normalize("0");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ALU aLU0 = new ALU();
      String string0 = aLU0.floatTrueValue("00000000000000000000", 5, 0);
      assertEquals("0.0", string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ALU aLU0 = new ALU();
      String string0 = aLU0.oneAdder("");
      assertEquals("1", string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ALU aLU0 = new ALU();
      String string0 = aLU0.leftShift("I", 1);
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ALU aLU0 = new ALU();
      String string0 = aLU0.floatTrueValue("1111111111111111111111111111111110000000000000000", 33, 0);
      assertEquals("-1.0", string0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ALU aLU0 = new ALU();
      String string0 = aLU0.floatTrueValue("u|2Zmw@u-G@q", 4, 2);
      assertEquals("36.5", string0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ALU aLU0 = new ALU();
      // Undeclared exception!
      try { 
        aLU0.floatTrueValue("u|2Zmw@u-G@q", 1, 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ALU aLU0 = new ALU();
      String string0 = aLU0.floatTrueValue("11", 0, 0);
      assertEquals("NaN", string0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ALU aLU0 = new ALU();
      String string0 = aLU0.ieee754("", 0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ALU aLU0 = new ALU();
      String string0 = aLU0.floatRepresentation("0", 1, 0);
      assertEquals("00", string0);
  }
}
